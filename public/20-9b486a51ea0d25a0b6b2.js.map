{"version":3,"sources":["webpack:///./node_modules/zdog/js/boilerplate.js","webpack:///./node_modules/zdog/js/anchor.js","webpack:///./node_modules/zdog/js/shape.js","webpack:///./node_modules/core-js/modules/es6.array.fill.js","webpack:///./node_modules/zdog/js/vector.js","webpack:///./node_modules/zdog/js/path-command.js","webpack:///./node_modules/zdog/js/ellipse.js","webpack:///./node_modules/zdog/js/canvas-renderer.js","webpack:///./node_modules/zdog/js/svg-renderer.js","webpack:///./node_modules/zdog/js/dragger.js","webpack:///./node_modules/zdog/js/group.js","webpack:///./node_modules/zdog/js/rect.js","webpack:///./node_modules/zdog/js/index.js","webpack:///./node_modules/core-js/modules/_array-fill.js","webpack:///./node_modules/zdog/js/illustration.js","webpack:///./node_modules/zdog/js/rounded-rect.js","webpack:///./node_modules/zdog/js/polygon.js","webpack:///./node_modules/zdog/js/hemisphere.js","webpack:///./node_modules/zdog/js/cylinder.js","webpack:///./node_modules/zdog/js/cone.js","webpack:///./node_modules/zdog/js/box.js"],"names":["root","factory","this","Zdog","TAU","Math","PI","extend","a","b","prop","lerp","alpha","modulo","num","div","powerMultipliers","2","3","4","5","easeInOut","power","isFirstHalf","max","min","slope","curve","module","exports","__webpack_require__","Anchor","Vector","CanvasRenderer","SvgRenderer","utils","onePoint","x","y","z","options","create","prototype","children","constructor","defaults","setOptions","translate","rotate","scale","multiply","origin","renderOrigin","addTo","addChild","optionKeys","Object","keys","concat","key","indexOf","shape","remove","push","removeChild","index","splice","update","reset","forEach","child","transform","set","translation","rotation","updateGraph","updateFlatGraph","flatGraph","item","updateSortValue","sort","shapeSorter","sortValue","defineProperty","get","_flatGraph","graph","getFlatGraph","addChildFlatGraph","childFlatGraph","Array","apply","render","renderGraphCanvas","ctx","Error","renderGraphSvg","svg","copy","itemOptions","ItemClass","copyGraph","clone","normalizeRotate","subclass","getSubclass","Super","Item","slice","Shape","PathCommand","stroke","fill","color","closed","visible","path","front","backface","call","updatePath","renderFront","renderNormal","actionNames","setPath","updatePathCommands","previousPoint","pathCommands","map","pathPart","i","method","points","length","isLineOrMove","isPointsArray","isArray","command","endRenderPoint","subtract","pointCount","firstPoint","lastPoint","isSame","sortValueTotal","renderer","isFacingBack","isDot","isCanvas","renderCanvasDot","renderPath","lineWidth","getLineWidth","fillStyle","getRenderColor","point","beginPath","radius","arc","elem","getRenderElement","isClosed","end","isSvg","svgElement","document","createElementNS","setAttribute","$export","P","position","rotateProperty","vec","angle","propA","propB","cos","sin","getMagnitudeSqrt","sum","abs","sqrt","pos","write","undefined","rotateZ","rotateY","rotateX","add","magnitude","magnitude2d","mapVectorPoint","renderPoints","mapNewVector","controlPoints","renderPoint","move","line","bezier","cp0","cp1","prev","corner","Ellipse","diameter","width","height","quarters","begin","moveTo","lineTo","bezierCurveTo","closePath","isStroke","strokeStyle","isFill","round","getPointString","pathValue","fillColor","appendChild","window","downEvent","moveEvent","upEvent","noop","Dragger","PointerEvent","onDragStart","onDragMove","onDragEnd","bindDrag","startElement","element","getQueryElement","style","touchAction","addEventListener","querySelector","handleEvent","event","type","onmousedown","onpointerdown","dragStart","ontouchstart","changedTouches","pointer","preventDefault","dragStartX","pageX","dragStartY","pageY","ontouchmove","dragMove","onmousemove","onpointermove","moveX","moveY","onmouseup","onpointerup","ontouchend","dragEnd","removeEventListener","Group","updateSort","Rect","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Illustration","RoundedRect","Polygon","Hemisphere","Cylinder","Cone","Box","toObject","toAbsoluteIndex","toLength","value","O","aLen","arguments","endPos","centered","zoom","dragRotate","resize","onPrerender","onResize","setElement","setDragRotate","setResize","nodeName","toLowerCase","setCanvas","setSvg","setSize","setSizeCanvas","setSizeSvg","resizeListener","onWindowResize","bind","setMeasuredSize","innerWidth","innerHeight","rect","getBoundingClientRect","renderGraph","updateRenderGraph","getContext","pixelRatio","devicePixelRatio","canvasWidth","canvasHeight","prerenderCanvas","postrenderCanvas","lineCap","lineJoin","clearRect","save","centerX","centerY","restore","getAttribute","viewWidth","viewHeight","viewX","viewY","removeAttribute","firstChild","empty","dragStartRX","dragStartRY","displaySize","moveRY","moveRX","cornerRadius","xA","yA","shortSide","xB","yB","sides","theta","apex","renderCentroid","renderDome","getDomeRenderElement","contourAngle","atan2","domeRadius","startAngle","endAngle","domeSvgElement","CylinderGroup","renderCylinderSurface","frontBase","rearBase","strokeWidth","frontFace","group","baseZ","baseColor","property","_prop","renderApex","tangentA","tangentB","surfacePathCommands","renderConeSurface","apexDistance","normalDistance","eccenAngle","acos","eccen","apexAngle","projectLength","projectAngle","setSurfaceRenderPoint","getSurfaceRenderElement","surfaceSvgElement","BoxRect","faceNames","boxDefaults","faceName","depth","_faceName","setFace","rectProperty","getFaceOptions","rearFace","leftFace","rightFace","topFace","bottomFace","isFaceColor"],"mappings":"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","file":"20-9b486a51ea0d25a0b6b2.js","sourcesContent":["/*!\n * Zdog v1.1.0\n * Round, flat, designer-friendly pseudo-3D engine\n * Licensed MIT\n * https://zzz.dog\n * Copyright 2019 Metafizzy\n */\n\n/**\n * Boilerplate & utils\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog = factory();\n  }\n})(this, function factory() {\n  var Zdog = {};\n  Zdog.TAU = Math.PI * 2;\n\n  Zdog.extend = function (a, b) {\n    for (var prop in b) {\n      a[prop] = b[prop];\n    }\n\n    return a;\n  };\n\n  Zdog.lerp = function (a, b, alpha) {\n    return (b - a) * alpha + a;\n  };\n\n  Zdog.modulo = function (num, div) {\n    return (num % div + div) % div;\n  };\n\n  var powerMultipliers = {\n    2: function _(a) {\n      return a * a;\n    },\n    3: function _(a) {\n      return a * a * a;\n    },\n    4: function _(a) {\n      return a * a * a * a;\n    },\n    5: function _(a) {\n      return a * a * a * a * a;\n    }\n  };\n\n  Zdog.easeInOut = function (alpha, power) {\n    if (power == 1) {\n      return alpha;\n    }\n\n    alpha = Math.max(0, Math.min(1, alpha));\n    var isFirstHalf = alpha < 0.5;\n    var slope = isFirstHalf ? alpha : 1 - alpha;\n    slope /= 0.5; // make easing steeper with more multiples\n\n    var powerMultiplier = powerMultipliers[power] || powerMultipliers[2];\n    var curve = powerMultiplier(slope);\n    curve /= 2;\n    return isFirstHalf ? curve : 1 - curve;\n  };\n\n  return Zdog;\n});","require(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\n/**\n * Anchor\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./canvas-renderer'), require('./svg-renderer'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Anchor = factory(Zdog, Zdog.Vector, Zdog.CanvasRenderer, Zdog.SvgRenderer);\n  }\n})(this, function factory(utils, Vector, CanvasRenderer, SvgRenderer) {\n  var TAU = utils.TAU;\n  var onePoint = {\n    x: 1,\n    y: 1,\n    z: 1\n  };\n\n  function Anchor(options) {\n    this.create(options || {});\n  }\n\n  Anchor.prototype.create = function (options) {\n    this.children = []; // set defaults & options\n\n    utils.extend(this, this.constructor.defaults);\n    this.setOptions(options); // transform\n\n    this.translate = new Vector(options.translate);\n    this.rotate = new Vector(options.rotate);\n    this.scale = new Vector(onePoint).multiply(this.scale); // origin\n\n    this.origin = new Vector();\n    this.renderOrigin = new Vector();\n\n    if (this.addTo) {\n      this.addTo.addChild(this);\n    }\n  };\n\n  Anchor.defaults = {};\n  Anchor.optionKeys = Object.keys(Anchor.defaults).concat(['rotate', 'translate', 'scale', 'addTo']);\n\n  Anchor.prototype.setOptions = function (options) {\n    var optionKeys = this.constructor.optionKeys;\n\n    for (var key in options) {\n      if (optionKeys.indexOf(key) != -1) {\n        this[key] = options[key];\n      }\n    }\n  };\n\n  Anchor.prototype.addChild = function (shape) {\n    if (this.children.indexOf(shape) != -1) {\n      return;\n    }\n\n    shape.remove(); // remove previous parent\n\n    shape.addTo = this; // keep parent reference\n\n    this.children.push(shape);\n  };\n\n  Anchor.prototype.removeChild = function (shape) {\n    var index = this.children.indexOf(shape);\n\n    if (index != -1) {\n      this.children.splice(index, 1);\n    }\n  };\n\n  Anchor.prototype.remove = function () {\n    if (this.addTo) {\n      this.addTo.removeChild(this);\n    }\n  }; // ----- update ----- //\n\n\n  Anchor.prototype.update = function () {\n    // update self\n    this.reset(); // update children\n\n    this.children.forEach(function (child) {\n      child.update();\n    });\n    this.transform(this.translate, this.rotate, this.scale);\n  };\n\n  Anchor.prototype.reset = function () {\n    this.renderOrigin.set(this.origin);\n  };\n\n  Anchor.prototype.transform = function (translation, rotation, scale) {\n    this.renderOrigin.transform(translation, rotation, scale); // transform children\n\n    this.children.forEach(function (child) {\n      child.transform(translation, rotation, scale);\n    });\n  };\n\n  Anchor.prototype.updateGraph = function () {\n    this.update();\n    this.updateFlatGraph();\n    this.flatGraph.forEach(function (item) {\n      item.updateSortValue();\n    }); // z-sort\n\n    this.flatGraph.sort(Anchor.shapeSorter);\n  };\n\n  Anchor.shapeSorter = function (a, b) {\n    return a.sortValue - b.sortValue;\n  }; // custom getter to check for flatGraph before using it\n\n\n  Object.defineProperty(Anchor.prototype, 'flatGraph', {\n    get: function get() {\n      if (!this._flatGraph) {\n        this.updateFlatGraph();\n      }\n\n      return this._flatGraph;\n    },\n    set: function set(graph) {\n      this._flatGraph = graph;\n    }\n  });\n\n  Anchor.prototype.updateFlatGraph = function () {\n    this.flatGraph = this.getFlatGraph();\n  }; // return Array of self & all child graph items\n\n\n  Anchor.prototype.getFlatGraph = function () {\n    var flatGraph = [this];\n    return this.addChildFlatGraph(flatGraph);\n  };\n\n  Anchor.prototype.addChildFlatGraph = function (flatGraph) {\n    this.children.forEach(function (child) {\n      var childFlatGraph = child.getFlatGraph();\n      Array.prototype.push.apply(flatGraph, childFlatGraph);\n    });\n    return flatGraph;\n  };\n\n  Anchor.prototype.updateSortValue = function () {\n    this.sortValue = this.renderOrigin.z;\n  }; // ----- render ----- //\n\n\n  Anchor.prototype.render = function () {}; // TODO refactor out CanvasRenderer so its not a dependency within anchor.js\n\n\n  Anchor.prototype.renderGraphCanvas = function (ctx) {\n    if (!ctx) {\n      throw new Error('ctx is ' + ctx + '. ' + 'Canvas context required for render. Check .renderGraphCanvas( ctx ).');\n    }\n\n    this.flatGraph.forEach(function (item) {\n      item.render(ctx, CanvasRenderer);\n    });\n  };\n\n  Anchor.prototype.renderGraphSvg = function (svg) {\n    if (!svg) {\n      throw new Error('svg is ' + svg + '. ' + 'SVG required for render. Check .renderGraphSvg( svg ).');\n    }\n\n    this.flatGraph.forEach(function (item) {\n      item.render(svg, SvgRenderer);\n    });\n  }; // ----- misc ----- //\n\n\n  Anchor.prototype.copy = function (options) {\n    // copy options\n    var itemOptions = {};\n    var optionKeys = this.constructor.optionKeys;\n    optionKeys.forEach(function (key) {\n      itemOptions[key] = this[key];\n    }, this); // add set options\n\n    utils.extend(itemOptions, options);\n    var ItemClass = this.constructor;\n    return new ItemClass(itemOptions);\n  };\n\n  Anchor.prototype.copyGraph = function (options) {\n    var clone = this.copy(options);\n    this.children.forEach(function (child) {\n      child.copyGraph({\n        addTo: clone\n      });\n    });\n    return clone;\n  };\n\n  Anchor.prototype.normalizeRotate = function () {\n    this.rotate.x = utils.modulo(this.rotate.x, TAU);\n    this.rotate.y = utils.modulo(this.rotate.y, TAU);\n    this.rotate.z = utils.modulo(this.rotate.z, TAU);\n  }; // ----- subclass ----- //\n\n\n  function getSubclass(Super) {\n    return function (defaults) {\n      // create constructor\n      function Item(options) {\n        this.create(options || {});\n      }\n\n      Item.prototype = Object.create(Super.prototype);\n      Item.prototype.constructor = Item;\n      Item.defaults = utils.extend({}, Super.defaults);\n      utils.extend(Item.defaults, defaults); // create optionKeys\n\n      Item.optionKeys = Super.optionKeys.slice(0); // add defaults keys to optionKeys, dedupe\n\n      Object.keys(Item.defaults).forEach(function (key) {\n        if (!Item.optionKeys.indexOf(key) != 1) {\n          Item.optionKeys.push(key);\n        }\n      });\n      Item.subclass = getSubclass(Item);\n      return Item;\n    };\n  }\n\n  Anchor.subclass = getSubclass(Anchor);\n  return Anchor;\n});","require(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\n/**\n * Shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./path-command'), require('./anchor'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Shape = factory(Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor);\n  }\n})(this, function factory(utils, Vector, PathCommand, Anchor) {\n  var Shape = Anchor.subclass({\n    stroke: 1,\n    fill: false,\n    color: '#333',\n    closed: true,\n    visible: true,\n    path: [{}],\n    front: {\n      z: 1\n    },\n    backface: true\n  });\n\n  Shape.prototype.create = function (options) {\n    Anchor.prototype.create.call(this, options);\n    this.updatePath(); // front\n\n    this.front = new Vector(options.front || this.front);\n    this.renderFront = new Vector(this.front);\n    this.renderNormal = new Vector();\n  };\n\n  var actionNames = ['move', 'line', 'bezier', 'arc'];\n\n  Shape.prototype.updatePath = function () {\n    this.setPath();\n    this.updatePathCommands();\n  }; // place holder for Ellipse, Rect, etc.\n\n\n  Shape.prototype.setPath = function () {}; // parse path into PathCommands\n\n\n  Shape.prototype.updatePathCommands = function () {\n    var previousPoint;\n    this.pathCommands = this.path.map(function (pathPart, i) {\n      // pathPart can be just vector coordinates -> { x, y, z }\n      // or path instruction -> { arc: [ {x0,y0,z0}, {x1,y1,z1} ] }\n      var keys = Object.keys(pathPart);\n      var method = keys[0];\n      var points = pathPart[method]; // default to line if no instruction\n\n      var isInstruction = keys.length == 1 && actionNames.indexOf(method) != -1;\n\n      if (!isInstruction) {\n        method = 'line';\n        points = pathPart;\n      } // munge single-point methods like line & move without arrays\n\n\n      var isLineOrMove = method == 'line' || method == 'move';\n      var isPointsArray = Array.isArray(points);\n\n      if (isLineOrMove && !isPointsArray) {\n        points = [points];\n      } // first action is always move\n\n\n      method = i === 0 ? 'move' : method; // arcs require previous last point\n\n      var command = new PathCommand(method, points, previousPoint); // update previousLastPoint\n\n      previousPoint = command.endRenderPoint;\n      return command;\n    });\n  }; // ----- update ----- //\n\n\n  Shape.prototype.reset = function () {\n    this.renderOrigin.set(this.origin);\n    this.renderFront.set(this.front); // reset command render points\n\n    this.pathCommands.forEach(function (command) {\n      command.reset();\n    });\n  };\n\n  Shape.prototype.transform = function (translation, rotation, scale) {\n    // calculate render points backface visibility & cone/hemisphere shapes\n    this.renderOrigin.transform(translation, rotation, scale);\n    this.renderFront.transform(translation, rotation, scale);\n    this.renderNormal.set(this.renderOrigin).subtract(this.renderFront); // transform points\n\n    this.pathCommands.forEach(function (command) {\n      command.transform(translation, rotation, scale);\n    }); // transform children\n\n    this.children.forEach(function (child) {\n      child.transform(translation, rotation, scale);\n    });\n  };\n\n  Shape.prototype.updateSortValue = function () {\n    // sort by average z of all points\n    // def not geometrically correct, but works for me\n    var pointCount = this.pathCommands.length;\n    var firstPoint = this.pathCommands[0].endRenderPoint;\n    var lastPoint = this.pathCommands[pointCount - 1].endRenderPoint; // ignore the final point if self closing shape\n\n    var isSelfClosing = pointCount > 2 && firstPoint.isSame(lastPoint);\n\n    if (isSelfClosing) {\n      pointCount -= 1;\n    }\n\n    var sortValueTotal = 0;\n\n    for (var i = 0; i < pointCount; i++) {\n      sortValueTotal += this.pathCommands[i].endRenderPoint.z;\n    }\n\n    this.sortValue = sortValueTotal / pointCount;\n  }; // ----- render ----- //\n\n\n  Shape.prototype.render = function (ctx, renderer) {\n    var length = this.pathCommands.length;\n\n    if (!this.visible || !length) {\n      return;\n    } // do not render if hiding backface\n\n\n    this.isFacingBack = this.renderNormal.z > 0;\n\n    if (!this.backface && this.isFacingBack) {\n      return;\n    }\n\n    if (!renderer) {\n      throw new Error('Zdog renderer required. Set to ' + renderer);\n    } // render dot or path\n\n\n    var isDot = length == 1;\n\n    if (renderer.isCanvas && isDot) {\n      this.renderCanvasDot(ctx, renderer);\n    } else {\n      this.renderPath(ctx, renderer);\n    }\n  };\n\n  var TAU = utils.TAU; // Safari does not render lines with no size, have to render circle instead\n\n  Shape.prototype.renderCanvasDot = function (ctx) {\n    var lineWidth = this.getLineWidth();\n\n    if (!lineWidth) {\n      return;\n    }\n\n    ctx.fillStyle = this.getRenderColor();\n    var point = this.pathCommands[0].endRenderPoint;\n    ctx.beginPath();\n    var radius = lineWidth / 2;\n    ctx.arc(point.x, point.y, radius, 0, TAU);\n    ctx.fill();\n  };\n\n  Shape.prototype.getLineWidth = function () {\n    if (!this.stroke) {\n      return 0;\n    }\n\n    if (this.stroke == true) {\n      return 1;\n    }\n\n    return this.stroke;\n  };\n\n  Shape.prototype.getRenderColor = function () {\n    // use backface color if applicable\n    var isBackfaceColor = typeof this.backface == 'string' && this.isFacingBack;\n    var color = isBackfaceColor ? this.backface : this.color;\n    return color;\n  };\n\n  Shape.prototype.renderPath = function (ctx, renderer) {\n    var elem = this.getRenderElement(ctx, renderer);\n    var isTwoPoints = this.pathCommands.length == 2 && this.pathCommands[1].method == 'line';\n    var isClosed = !isTwoPoints && this.closed;\n    var color = this.getRenderColor();\n    renderer.renderPath(ctx, elem, this.pathCommands, isClosed);\n    renderer.stroke(ctx, elem, this.stroke, color, this.getLineWidth());\n    renderer.fill(ctx, elem, this.fill, color);\n    renderer.end(ctx, elem);\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  Shape.prototype.getRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.svgElement) {\n      // create svgElement\n      this.svgElement = document.createElementNS(svgURI, 'path');\n      this.svgElement.setAttribute('stroke-linecap', 'round');\n      this.svgElement.setAttribute('stroke-linejoin', 'round');\n    }\n\n    return this.svgElement;\n  };\n\n  return Shape;\n});","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\nvar $export = require('./_export');\n\n$export($export.P, 'Array', { fill: require('./_array-fill') });\n\nrequire('./_add-to-unscopables')('fill');\n","/**\n * Vector\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Vector = factory(Zdog);\n  }\n})(this, function factory(utils) {\n  function Vector(position) {\n    this.set(position);\n  }\n\n  var TAU = utils.TAU; // 'pos' = 'position'\n\n  Vector.prototype.set = function (pos) {\n    this.x = pos && pos.x || 0;\n    this.y = pos && pos.y || 0;\n    this.z = pos && pos.z || 0;\n    return this;\n  }; // set coordinates without sanitizing\n  // vec.write({ y: 2 }) only sets y coord\n\n\n  Vector.prototype.write = function (pos) {\n    if (!pos) {\n      return this;\n    }\n\n    this.x = pos.x != undefined ? pos.x : this.x;\n    this.y = pos.y != undefined ? pos.y : this.y;\n    this.z = pos.z != undefined ? pos.z : this.z;\n    return this;\n  };\n\n  Vector.prototype.rotate = function (rotation) {\n    if (!rotation) {\n      return;\n    }\n\n    this.rotateZ(rotation.z);\n    this.rotateY(rotation.y);\n    this.rotateX(rotation.x);\n    return this;\n  };\n\n  Vector.prototype.rotateZ = function (angle) {\n    rotateProperty(this, angle, 'x', 'y');\n  };\n\n  Vector.prototype.rotateX = function (angle) {\n    rotateProperty(this, angle, 'y', 'z');\n  };\n\n  Vector.prototype.rotateY = function (angle) {\n    rotateProperty(this, angle, 'x', 'z');\n  };\n\n  function rotateProperty(vec, angle, propA, propB) {\n    if (!angle || angle % TAU === 0) {\n      return;\n    }\n\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var a = vec[propA];\n    var b = vec[propB];\n    vec[propA] = a * cos - b * sin;\n    vec[propB] = b * cos + a * sin;\n  }\n\n  Vector.prototype.isSame = function (pos) {\n    if (!pos) {\n      return false;\n    }\n\n    return this.x === pos.x && this.y === pos.y && this.z === pos.z;\n  };\n\n  Vector.prototype.add = function (pos) {\n    if (!pos) {\n      return this;\n    }\n\n    this.x += pos.x || 0;\n    this.y += pos.y || 0;\n    this.z += pos.z || 0;\n    return this;\n  };\n\n  Vector.prototype.subtract = function (pos) {\n    if (!pos) {\n      return this;\n    }\n\n    this.x -= pos.x || 0;\n    this.y -= pos.y || 0;\n    this.z -= pos.z || 0;\n    return this;\n  };\n\n  Vector.prototype.multiply = function (pos) {\n    if (pos == undefined) {\n      return this;\n    } // multiple all values by same number\n\n\n    if (typeof pos == 'number') {\n      this.x *= pos;\n      this.y *= pos;\n      this.z *= pos;\n    } else {\n      // multiply object\n      this.x *= pos.x != undefined ? pos.x : 1;\n      this.y *= pos.y != undefined ? pos.y : 1;\n      this.z *= pos.z != undefined ? pos.z : 1;\n    }\n\n    return this;\n  };\n\n  Vector.prototype.transform = function (translation, rotation, scale) {\n    this.multiply(scale);\n    this.rotate(rotation);\n    this.add(translation);\n    return this;\n  };\n\n  Vector.prototype.lerp = function (pos, alpha) {\n    this.x = utils.lerp(this.x, pos.x || 0, alpha);\n    this.y = utils.lerp(this.y, pos.y || 0, alpha);\n    this.z = utils.lerp(this.z, pos.z || 0, alpha);\n    return this;\n  };\n\n  Vector.prototype.magnitude = function () {\n    var sum = this.x * this.x + this.y * this.y + this.z * this.z;\n    return getMagnitudeSqrt(sum);\n  };\n\n  function getMagnitudeSqrt(sum) {\n    // PERF: check if sum ~= 1 and skip sqrt\n    if (Math.abs(sum - 1) < 0.00000001) {\n      return 1;\n    }\n\n    return Math.sqrt(sum);\n  }\n\n  Vector.prototype.magnitude2d = function () {\n    var sum = this.x * this.x + this.y * this.y;\n    return getMagnitudeSqrt(sum);\n  };\n\n  Vector.prototype.copy = function () {\n    return new Vector(this);\n  };\n\n  return Vector;\n});","require(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\n/**\n * PathCommand\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./vector'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.PathCommand = factory(Zdog.Vector);\n  }\n})(this, function factory(Vector) {\n  function PathCommand(method, points, previousPoint) {\n    this.method = method;\n    this.points = points.map(mapVectorPoint);\n    this.renderPoints = points.map(mapNewVector);\n    this.previousPoint = previousPoint;\n    this.endRenderPoint = this.renderPoints[this.renderPoints.length - 1]; // arc actions come with previous point & corner point\n    // but require bezier control points\n\n    if (method == 'arc') {\n      this.controlPoints = [new Vector(), new Vector()];\n    }\n  }\n\n  function mapVectorPoint(point) {\n    if (point instanceof Vector) {\n      return point;\n    } else {\n      return new Vector(point);\n    }\n  }\n\n  function mapNewVector(point) {\n    return new Vector(point);\n  }\n\n  PathCommand.prototype.reset = function () {\n    // reset renderPoints back to orignal points position\n    var points = this.points;\n    this.renderPoints.forEach(function (renderPoint, i) {\n      var point = points[i];\n      renderPoint.set(point);\n    });\n  };\n\n  PathCommand.prototype.transform = function (translation, rotation, scale) {\n    this.renderPoints.forEach(function (renderPoint) {\n      renderPoint.transform(translation, rotation, scale);\n    });\n  };\n\n  PathCommand.prototype.render = function (ctx, elem, renderer) {\n    return this[this.method](ctx, elem, renderer);\n  };\n\n  PathCommand.prototype.move = function (ctx, elem, renderer) {\n    return renderer.move(ctx, elem, this.renderPoints[0]);\n  };\n\n  PathCommand.prototype.line = function (ctx, elem, renderer) {\n    return renderer.line(ctx, elem, this.renderPoints[0]);\n  };\n\n  PathCommand.prototype.bezier = function (ctx, elem, renderer) {\n    var cp0 = this.renderPoints[0];\n    var cp1 = this.renderPoints[1];\n    var end = this.renderPoints[2];\n    return renderer.bezier(ctx, elem, cp0, cp1, end);\n  };\n\n  var arcHandleLength = 9 / 16;\n\n  PathCommand.prototype.arc = function (ctx, elem, renderer) {\n    var prev = this.previousPoint;\n    var corner = this.renderPoints[0];\n    var end = this.renderPoints[1];\n    var cp0 = this.controlPoints[0];\n    var cp1 = this.controlPoints[1];\n    cp0.set(prev).lerp(corner, arcHandleLength);\n    cp1.set(end).lerp(corner, arcHandleLength);\n    return renderer.bezier(ctx, elem, cp0, cp1, end);\n  };\n\n  return PathCommand;\n});","/**\n * Ellipse\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Ellipse = factory(Zdog.Shape);\n  }\n})(this, function factory(Shape) {\n  var Ellipse = Shape.subclass({\n    diameter: 1,\n    width: undefined,\n    height: undefined,\n    quarters: 4,\n    closed: false\n  });\n\n  Ellipse.prototype.setPath = function () {\n    var width = this.width != undefined ? this.width : this.diameter;\n    var height = this.height != undefined ? this.height : this.diameter;\n    var x = width / 2;\n    var y = height / 2;\n    this.path = [{\n      x: 0,\n      y: -y\n    }, {\n      arc: [// top right\n      {\n        x: x,\n        y: -y\n      }, {\n        x: x,\n        y: 0\n      }]\n    }]; // bottom right\n\n    if (this.quarters > 1) {\n      this.path.push({\n        arc: [{\n          x: x,\n          y: y\n        }, {\n          x: 0,\n          y: y\n        }]\n      });\n    } // bottom left\n\n\n    if (this.quarters > 2) {\n      this.path.push({\n        arc: [{\n          x: -x,\n          y: y\n        }, {\n          x: -x,\n          y: 0\n        }]\n      });\n    } // top left\n\n\n    if (this.quarters > 3) {\n      this.path.push({\n        arc: [{\n          x: -x,\n          y: -y\n        }, {\n          x: 0,\n          y: -y\n        }]\n      });\n    }\n  };\n\n  return Ellipse;\n});","require(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\n/**\n * CanvasRenderer\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.CanvasRenderer = factory();\n  }\n})(this, function factory() {\n  var CanvasRenderer = {\n    isCanvas: true\n  };\n\n  CanvasRenderer.begin = function (ctx) {\n    ctx.beginPath();\n  };\n\n  CanvasRenderer.move = function (ctx, elem, point) {\n    ctx.moveTo(point.x, point.y);\n  };\n\n  CanvasRenderer.line = function (ctx, elem, point) {\n    ctx.lineTo(point.x, point.y);\n  };\n\n  CanvasRenderer.bezier = function (ctx, elem, cp0, cp1, end) {\n    ctx.bezierCurveTo(cp0.x, cp0.y, cp1.x, cp1.y, end.x, end.y);\n  };\n\n  CanvasRenderer.closePath = function (ctx) {\n    ctx.closePath();\n  };\n\n  CanvasRenderer.setPath = function () {};\n\n  CanvasRenderer.renderPath = function (ctx, elem, pathCommands, isClosed) {\n    this.begin(ctx, elem);\n    pathCommands.forEach(function (command) {\n      command.render(ctx, elem, CanvasRenderer);\n    });\n\n    if (isClosed) {\n      this.closePath(ctx, elem);\n    }\n  };\n\n  CanvasRenderer.stroke = function (ctx, elem, isStroke, color, lineWidth) {\n    if (!isStroke) {\n      return;\n    }\n\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.stroke();\n  };\n\n  CanvasRenderer.fill = function (ctx, elem, isFill, color) {\n    if (!isFill) {\n      return;\n    }\n\n    ctx.fillStyle = color;\n    ctx.fill();\n  };\n\n  CanvasRenderer.end = function () {};\n\n  return CanvasRenderer;\n});","require(\"core-js/modules/es6.array.for-each\");\n\n/**\n * SvgRenderer\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    root.Zdog.SvgRenderer = factory();\n  }\n})(this, function factory() {\n  var SvgRenderer = {\n    isSvg: true\n  }; // round path coordinates to 3 decimals\n\n  var round = SvgRenderer.round = function (num) {\n    return Math.round(num * 1000) / 1000;\n  };\n\n  function getPointString(point) {\n    return round(point.x) + ',' + round(point.y) + ' ';\n  }\n\n  SvgRenderer.begin = function () {};\n\n  SvgRenderer.move = function (svg, elem, point) {\n    return 'M' + getPointString(point);\n  };\n\n  SvgRenderer.line = function (svg, elem, point) {\n    return 'L' + getPointString(point);\n  };\n\n  SvgRenderer.bezier = function (svg, elem, cp0, cp1, end) {\n    return 'C' + getPointString(cp0) + getPointString(cp1) + getPointString(end);\n  };\n\n  SvgRenderer.closePath = function ()\n  /* elem */\n  {\n    return 'Z';\n  };\n\n  SvgRenderer.setPath = function (svg, elem, pathValue) {\n    elem.setAttribute('d', pathValue);\n  };\n\n  SvgRenderer.renderPath = function (svg, elem, pathCommands, isClosed) {\n    var pathValue = '';\n    pathCommands.forEach(function (command) {\n      pathValue += command.render(svg, elem, SvgRenderer);\n    });\n\n    if (isClosed) {\n      pathValue += this.closePath(svg, elem);\n    }\n\n    this.setPath(svg, elem, pathValue);\n  };\n\n  SvgRenderer.stroke = function (svg, elem, isStroke, color, lineWidth) {\n    if (!isStroke) {\n      return;\n    }\n\n    elem.setAttribute('stroke', color);\n    elem.setAttribute('stroke-width', lineWidth);\n  };\n\n  SvgRenderer.fill = function (svg, elem, isFill, color) {\n    var fillColor = isFill ? color : 'none';\n    elem.setAttribute('fill', fillColor);\n  };\n\n  SvgRenderer.end = function (svg, elem) {\n    svg.appendChild(elem);\n  };\n\n  return SvgRenderer;\n});","/**\n * Dragger\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(root);\n  } else {\n    // browser global\n    root.Zdog.Dragger = factory(root);\n  }\n})(this, function factory(window) {\n  // quick & dirty drag event stuff\n  // messes up if multiple pointers/touches\n  // event support, default to mouse events\n  var downEvent = 'mousedown';\n  var moveEvent = 'mousemove';\n  var upEvent = 'mouseup';\n\n  if (window.PointerEvent) {\n    // PointerEvent, Chrome\n    downEvent = 'pointerdown';\n    moveEvent = 'pointermove';\n    upEvent = 'pointerup';\n  } else if ('ontouchstart' in window) {\n    // Touch Events, iOS Safari\n    downEvent = 'touchstart';\n    moveEvent = 'touchmove';\n    upEvent = 'touchend';\n  }\n\n  function noop() {}\n\n  function Dragger(options) {\n    this.create(options || {});\n  }\n\n  Dragger.prototype.create = function (options) {\n    this.onDragStart = options.onDragStart || noop;\n    this.onDragMove = options.onDragMove || noop;\n    this.onDragEnd = options.onDragEnd || noop;\n    this.bindDrag(options.startElement);\n  };\n\n  Dragger.prototype.bindDrag = function (element) {\n    element = this.getQueryElement(element);\n\n    if (!element) {\n      return;\n    } // disable browser gestures #53\n\n\n    element.style.touchAction = 'none';\n    element.addEventListener(downEvent, this);\n  };\n\n  Dragger.prototype.getQueryElement = function (element) {\n    if (typeof element == 'string') {\n      // with string, query selector\n      element = document.querySelector(element);\n    }\n\n    return element;\n  };\n\n  Dragger.prototype.handleEvent = function (event) {\n    var method = this['on' + event.type];\n\n    if (method) {\n      method.call(this, event);\n    }\n  };\n\n  Dragger.prototype.onmousedown = Dragger.prototype.onpointerdown = function (event) {\n    this.dragStart(event, event);\n  };\n\n  Dragger.prototype.ontouchstart = function (event) {\n    this.dragStart(event, event.changedTouches[0]);\n  };\n\n  Dragger.prototype.dragStart = function (event, pointer) {\n    event.preventDefault();\n    this.dragStartX = pointer.pageX;\n    this.dragStartY = pointer.pageY;\n    window.addEventListener(moveEvent, this);\n    window.addEventListener(upEvent, this);\n    this.onDragStart(pointer);\n  };\n\n  Dragger.prototype.ontouchmove = function (event) {\n    // HACK, moved touch may not be first\n    this.dragMove(event, event.changedTouches[0]);\n  };\n\n  Dragger.prototype.onmousemove = Dragger.prototype.onpointermove = function (event) {\n    this.dragMove(event, event);\n  };\n\n  Dragger.prototype.dragMove = function (event, pointer) {\n    event.preventDefault();\n    var moveX = pointer.pageX - this.dragStartX;\n    var moveY = pointer.pageY - this.dragStartY;\n    this.onDragMove(pointer, moveX, moveY);\n  };\n\n  Dragger.prototype.onmouseup = Dragger.prototype.onpointerup = Dragger.prototype.ontouchend = Dragger.prototype.dragEnd = function ()\n  /* event */\n  {\n    window.removeEventListener(moveEvent, this);\n    window.removeEventListener(upEvent, this);\n    this.onDragEnd();\n  };\n\n  return Dragger;\n});","require(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\n/**\n * Group\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./anchor'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Group = factory(Zdog.Anchor);\n  }\n})(this, function factory(Anchor) {\n  var Group = Anchor.subclass({\n    updateSort: false,\n    visible: true\n  }); // ----- update ----- //\n\n  Group.prototype.updateSortValue = function () {\n    var sortValueTotal = 0;\n    this.flatGraph.forEach(function (item) {\n      item.updateSortValue();\n      sortValueTotal += item.sortValue;\n    }); // average sort value of all points\n    // def not geometrically correct, but works for me\n\n    this.sortValue = sortValueTotal / this.flatGraph.length;\n\n    if (this.updateSort) {\n      this.flatGraph.sort(Anchor.shapeSorter);\n    }\n  }; // ----- render ----- //\n\n\n  Group.prototype.render = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    }\n\n    this.flatGraph.forEach(function (item) {\n      item.render(ctx, renderer);\n    });\n  }; // actual group flatGraph only used inside group\n\n\n  Group.prototype.updateFlatGraph = function () {\n    // do not include self\n    var flatGraph = [];\n    this.flatGraph = this.addChildFlatGraph(flatGraph);\n  }; // do not include children, group handles rendering & sorting internally\n\n\n  Group.prototype.getFlatGraph = function () {\n    return [this];\n  };\n\n  return Group;\n});","/**\n * Rect\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Rect = factory(Zdog.Shape);\n  }\n})(this, function factory(Shape) {\n  var Rect = Shape.subclass({\n    width: 1,\n    height: 1\n  });\n\n  Rect.prototype.setPath = function () {\n    var x = this.width / 2;\n    var y = this.height / 2;\n    /* eslint key-spacing: \"off\" */\n\n    this.path = [{\n      x: -x,\n      y: -y\n    }, {\n      x: x,\n      y: -y\n    }, {\n      x: x,\n      y: y\n    }, {\n      x: -x,\n      y: y\n    }];\n  };\n\n  return Rect;\n});","/**\n * Index\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./canvas-renderer'), require('./svg-renderer'), require('./vector'), require('./anchor'), require('./dragger'), require('./illustration'), require('./path-command'), require('./shape'), require('./group'), require('./rect'), require('./rounded-rect'), require('./ellipse'), require('./polygon'), require('./hemisphere'), require('./cylinder'), require('./cone'), require('./box'));\n  } else if (typeof define == 'function' && define.amd) {\n    /* globals define */\n    // AMD\n    define('zdog', [], root.Zdog);\n  }\n})(this, function factory(Zdog, CanvasRenderer, SvgRenderer, Vector, Anchor, Dragger, Illustration, PathCommand, Shape, Group, Rect, RoundedRect, Ellipse, Polygon, Hemisphere, Cylinder, Cone, Box) {\n  Zdog.CanvasRenderer = CanvasRenderer;\n  Zdog.SvgRenderer = SvgRenderer;\n  Zdog.Vector = Vector;\n  Zdog.Anchor = Anchor;\n  Zdog.Dragger = Dragger;\n  Zdog.Illustration = Illustration;\n  Zdog.PathCommand = PathCommand;\n  Zdog.Shape = Shape;\n  Zdog.Group = Group;\n  Zdog.Rect = Rect;\n  Zdog.RoundedRect = RoundedRect;\n  Zdog.Ellipse = Ellipse;\n  Zdog.Polygon = Polygon;\n  Zdog.Hemisphere = Hemisphere;\n  Zdog.Cylinder = Cylinder;\n  Zdog.Cone = Cone;\n  Zdog.Box = Box;\n  return Zdog;\n});","// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)\n'use strict';\nvar toObject = require('./_to-object');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nvar toLength = require('./_to-length');\nmodule.exports = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n","require(\"core-js/modules/es6.function.bind\");\n\n/**\n * Illustration\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./anchor'), require('./dragger'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Illustration = factory(Zdog, Zdog.Anchor, Zdog.Dragger);\n  }\n})(this, function factory(utils, Anchor, Dragger) {\n  function noop() {}\n\n  var TAU = utils.TAU;\n  var Illustration = Anchor.subclass({\n    element: undefined,\n    centered: true,\n    zoom: 1,\n    dragRotate: false,\n    resize: false,\n    onPrerender: noop,\n    onDragStart: noop,\n    onDragMove: noop,\n    onDragEnd: noop,\n    onResize: noop\n  });\n  utils.extend(Illustration.prototype, Dragger.prototype);\n\n  Illustration.prototype.create = function (options) {\n    Anchor.prototype.create.call(this, options);\n    Dragger.prototype.create.call(this, options);\n    this.setElement(this.element);\n    this.setDragRotate(this.dragRotate);\n    this.setResize(this.resize);\n  };\n\n  Illustration.prototype.setElement = function (element) {\n    element = this.getQueryElement(element);\n\n    if (!element) {\n      throw new Error('Zdog.Illustration element required. Set to ' + element);\n    }\n\n    var nodeName = element.nodeName.toLowerCase();\n\n    if (nodeName == 'canvas') {\n      this.setCanvas(element);\n    } else if (nodeName == 'svg') {\n      this.setSvg(element);\n    }\n  };\n\n  Illustration.prototype.setSize = function (width, height) {\n    width = Math.round(width);\n    height = Math.round(height);\n\n    if (this.isCanvas) {\n      this.setSizeCanvas(width, height);\n    } else if (this.isSvg) {\n      this.setSizeSvg(width, height);\n    }\n  };\n\n  Illustration.prototype.setResize = function (resize) {\n    this.resize = resize; // create resize event listener\n\n    if (!this.resizeListener) {\n      this.resizeListener = this.onWindowResize.bind(this);\n    } // add/remove event listener\n\n\n    if (resize) {\n      window.addEventListener('resize', this.resizeListener);\n      this.onWindowResize();\n    } else {\n      window.removeEventListener('resize', this.resizeListener);\n    }\n  }; // TODO debounce this?\n\n\n  Illustration.prototype.onWindowResize = function () {\n    this.setMeasuredSize();\n    this.onResize(this.width, this.height);\n  };\n\n  Illustration.prototype.setMeasuredSize = function () {\n    var width, height;\n    var isFullscreen = this.resize == 'fullscreen';\n\n    if (isFullscreen) {\n      width = window.innerWidth;\n      height = window.innerHeight;\n    } else {\n      var rect = this.element.getBoundingClientRect();\n      width = rect.width;\n      height = rect.height;\n    }\n\n    this.setSize(width, height);\n  }; // ----- render ----- //\n\n\n  Illustration.prototype.renderGraph = function (item) {\n    if (this.isCanvas) {\n      this.renderGraphCanvas(item);\n    } else if (this.isSvg) {\n      this.renderGraphSvg(item);\n    }\n  }; // combo method\n\n\n  Illustration.prototype.updateRenderGraph = function (item) {\n    this.updateGraph();\n    this.renderGraph(item);\n  }; // ----- canvas ----- //\n\n\n  Illustration.prototype.setCanvas = function (element) {\n    this.element = element;\n    this.isCanvas = true; // update related properties\n\n    this.ctx = this.element.getContext('2d'); // set initial size\n\n    this.setSizeCanvas(element.width, element.height);\n  };\n\n  Illustration.prototype.setSizeCanvas = function (width, height) {\n    this.width = width;\n    this.height = height; // up-rez for hi-DPI devices\n\n    var pixelRatio = this.pixelRatio = window.devicePixelRatio || 1;\n    this.element.width = this.canvasWidth = width * pixelRatio;\n    this.element.height = this.canvasHeight = height * pixelRatio;\n    var needsHighPixelRatioSizing = pixelRatio > 1 && !this.resize;\n\n    if (needsHighPixelRatioSizing) {\n      this.element.style.width = width + 'px';\n      this.element.style.height = height + 'px';\n    }\n  };\n\n  Illustration.prototype.renderGraphCanvas = function (item) {\n    item = item || this;\n    this.prerenderCanvas();\n    Anchor.prototype.renderGraphCanvas.call(item, this.ctx);\n    this.postrenderCanvas();\n  };\n\n  Illustration.prototype.prerenderCanvas = function () {\n    var ctx = this.ctx;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    ctx.save();\n\n    if (this.centered) {\n      var centerX = this.width / 2 * this.pixelRatio;\n      var centerY = this.height / 2 * this.pixelRatio;\n      ctx.translate(centerX, centerY);\n    }\n\n    var scale = this.pixelRatio * this.zoom;\n    ctx.scale(scale, scale);\n    this.onPrerender(ctx);\n  };\n\n  Illustration.prototype.postrenderCanvas = function () {\n    this.ctx.restore();\n  }; // ----- svg ----- //\n\n\n  Illustration.prototype.setSvg = function (element) {\n    this.element = element;\n    this.isSvg = true;\n    this.pixelRatio = 1; // set initial size from width & height attributes\n\n    var width = element.getAttribute('width');\n    var height = element.getAttribute('height');\n    this.setSizeSvg(width, height);\n  };\n\n  Illustration.prototype.setSizeSvg = function (width, height) {\n    this.width = width;\n    this.height = height;\n    var viewWidth = width / this.zoom;\n    var viewHeight = height / this.zoom;\n    var viewX = this.centered ? -viewWidth / 2 : 0;\n    var viewY = this.centered ? -viewHeight / 2 : 0;\n    this.element.setAttribute('viewBox', viewX + ' ' + viewY + ' ' + viewWidth + ' ' + viewHeight);\n\n    if (this.resize) {\n      // remove size attributes, let size be determined by viewbox\n      this.element.removeAttribute('width');\n      this.element.removeAttribute('height');\n    } else {\n      this.element.setAttribute('width', width);\n      this.element.setAttribute('height', height);\n    }\n  };\n\n  Illustration.prototype.renderGraphSvg = function (item) {\n    item = item || this;\n    empty(this.element);\n    this.onPrerender(this.element);\n    Anchor.prototype.renderGraphSvg.call(item, this.element);\n  };\n\n  function empty(element) {\n    while (element.firstChild) {\n      element.removeChild(element.firstChild);\n    }\n  } // ----- drag ----- //\n\n\n  Illustration.prototype.setDragRotate = function (item) {\n    if (!item) {\n      return;\n    } else if (item === true) {\n      /* eslint consistent-this: \"off\" */\n      item = this;\n    }\n\n    this.dragRotate = item;\n    this.bindDrag(this.element);\n  };\n\n  Illustration.prototype.dragStart = function ()\n  /* event, pointer */\n  {\n    this.dragStartRX = this.dragRotate.rotate.x;\n    this.dragStartRY = this.dragRotate.rotate.y;\n    Dragger.prototype.dragStart.apply(this, arguments);\n  };\n\n  Illustration.prototype.dragMove = function (event, pointer) {\n    var moveX = pointer.pageX - this.dragStartX;\n    var moveY = pointer.pageY - this.dragStartY;\n    var displaySize = Math.min(this.width, this.height);\n    var moveRY = moveX / displaySize * TAU;\n    var moveRX = moveY / displaySize * TAU;\n    this.dragRotate.rotate.x = this.dragStartRX - moveRX;\n    this.dragRotate.rotate.y = this.dragStartRY - moveRY;\n    Dragger.prototype.dragMove.apply(this, arguments);\n  };\n\n  return Illustration;\n});","/**\n * RoundedRect\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.RoundedRect = factory(Zdog.Shape);\n  }\n})(this, function factory(Shape) {\n  var RoundedRect = Shape.subclass({\n    width: 1,\n    height: 1,\n    cornerRadius: 0.25,\n    closed: false\n  });\n\n  RoundedRect.prototype.setPath = function () {\n    /* eslint\n       id-length: [ \"error\", { \"min\": 2, \"exceptions\": [ \"x\", \"y\" ] }],\n       key-spacing: \"off\" */\n    var xA = this.width / 2;\n    var yA = this.height / 2;\n    var shortSide = Math.min(xA, yA);\n    var cornerRadius = Math.min(this.cornerRadius, shortSide);\n    var xB = xA - cornerRadius;\n    var yB = yA - cornerRadius;\n    var path = [// top right corner\n    {\n      x: xB,\n      y: -yA\n    }, {\n      arc: [{\n        x: xA,\n        y: -yA\n      }, {\n        x: xA,\n        y: -yB\n      }]\n    }]; // bottom right corner\n\n    if (yB) {\n      path.push({\n        x: xA,\n        y: yB\n      });\n    }\n\n    path.push({\n      arc: [{\n        x: xA,\n        y: yA\n      }, {\n        x: xB,\n        y: yA\n      }]\n    }); // bottom left corner\n\n    if (xB) {\n      path.push({\n        x: -xB,\n        y: yA\n      });\n    }\n\n    path.push({\n      arc: [{\n        x: -xA,\n        y: yA\n      }, {\n        x: -xA,\n        y: yB\n      }]\n    }); // top left corner\n\n    if (yB) {\n      path.push({\n        x: -xA,\n        y: -yB\n      });\n    }\n\n    path.push({\n      arc: [{\n        x: -xA,\n        y: -yA\n      }, {\n        x: -xB,\n        y: -yA\n      }]\n    }); // back to top right corner\n\n    if (xB) {\n      path.push({\n        x: xB,\n        y: -yA\n      });\n    }\n\n    this.path = path;\n  };\n\n  return RoundedRect;\n});","/**\n * Shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./shape'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Polygon = factory(Zdog, Zdog.Shape);\n  }\n})(this, function factory(utils, Shape) {\n  var Polygon = Shape.subclass({\n    sides: 3,\n    radius: 0.5\n  });\n  var TAU = utils.TAU;\n\n  Polygon.prototype.setPath = function () {\n    this.path = [];\n\n    for (var i = 0; i < this.sides; i++) {\n      var theta = i / this.sides * TAU - TAU / 4;\n      var x = Math.cos(theta) * this.radius;\n      var y = Math.sin(theta) * this.radius;\n      this.path.push({\n        x: x,\n        y: y\n      });\n    }\n  };\n\n  return Polygon;\n});","require(\"core-js/modules/es6.array.fill\");\n\n/**\n * Hemisphere composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./anchor'), require('./ellipse'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Hemisphere = factory(Zdog, Zdog.Vector, Zdog.Anchor, Zdog.Ellipse);\n  }\n})(this, function factory(utils, Vector, Anchor, Ellipse) {\n  var Hemisphere = Ellipse.subclass({\n    fill: true\n  });\n  var TAU = utils.TAU;\n\n  Hemisphere.prototype.create = function ()\n  /* options */\n  {\n    // call super\n    Ellipse.prototype.create.apply(this, arguments); // composite shape, create child shapes\n\n    this.apex = new Anchor({\n      addTo: this,\n      translate: {\n        z: this.diameter / 2\n      }\n    }); // vector used for calculation\n\n    this.renderCentroid = new Vector();\n  };\n\n  Hemisphere.prototype.updateSortValue = function () {\n    // centroid of hemisphere is 3/8 between origin and apex\n    this.renderCentroid.set(this.renderOrigin).lerp(this.apex.renderOrigin, 3 / 8);\n    this.sortValue = this.renderCentroid.z;\n  };\n\n  Hemisphere.prototype.render = function (ctx, renderer) {\n    this.renderDome(ctx, renderer); // call super\n\n    Ellipse.prototype.render.apply(this, arguments);\n  };\n\n  Hemisphere.prototype.renderDome = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    }\n\n    var elem = this.getDomeRenderElement(ctx, renderer);\n    var contourAngle = Math.atan2(this.renderNormal.y, this.renderNormal.x);\n    var domeRadius = this.diameter / 2 * this.renderNormal.magnitude();\n    var x = this.renderOrigin.x;\n    var y = this.renderOrigin.y;\n\n    if (renderer.isCanvas) {\n      // canvas\n      var startAngle = contourAngle + TAU / 4;\n      var endAngle = contourAngle - TAU / 4;\n      ctx.beginPath();\n      ctx.arc(x, y, domeRadius, startAngle, endAngle);\n    } else if (renderer.isSvg) {\n      // svg\n      contourAngle = (contourAngle - TAU / 4) / TAU * 360;\n      this.domeSvgElement.setAttribute('d', 'M ' + -domeRadius + ',0 A ' + domeRadius + ',' + domeRadius + ' 0 0 1 ' + domeRadius + ',0');\n      this.domeSvgElement.setAttribute('transform', 'translate(' + x + ',' + y + ' ) rotate(' + contourAngle + ')');\n    }\n\n    renderer.stroke(ctx, elem, this.stroke, this.color, this.getLineWidth());\n    renderer.fill(ctx, elem, this.fill, this.color);\n    renderer.end(ctx, elem);\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  Hemisphere.prototype.getDomeRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.domeSvgElement) {\n      // create svgElement\n      this.domeSvgElement = document.createElementNS(svgURI, 'path');\n      this.domeSvgElement.setAttribute('stroke-linecap', 'round');\n      this.domeSvgElement.setAttribute('stroke-linejoin', 'round');\n    }\n\n    return this.domeSvgElement;\n  };\n\n  return Hemisphere;\n});","require(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\n/**\n * Cylinder composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./path-command'), require('./shape'), require('./group'), require('./ellipse'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cylinder = factory(Zdog, Zdog.PathCommand, Zdog.Shape, Zdog.Group, Zdog.Ellipse);\n  }\n})(this, function factory(utils, PathCommand, Shape, Group, Ellipse) {\n  function noop() {} // ----- CylinderGroup ----- //\n\n\n  var CylinderGroup = Group.subclass({\n    color: '#333',\n    updateSort: true\n  });\n\n  CylinderGroup.prototype.create = function () {\n    Group.prototype.create.apply(this, arguments);\n    this.pathCommands = [new PathCommand('move', [{}]), new PathCommand('line', [{}])];\n  };\n\n  CylinderGroup.prototype.render = function (ctx, renderer) {\n    this.renderCylinderSurface(ctx, renderer);\n    Group.prototype.render.apply(this, arguments);\n  };\n\n  CylinderGroup.prototype.renderCylinderSurface = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    } // render cylinder surface\n\n\n    var elem = this.getRenderElement(ctx, renderer);\n    var frontBase = this.frontBase;\n    var rearBase = this.rearBase;\n    var scale = frontBase.renderNormal.magnitude();\n    var strokeWidth = frontBase.diameter * scale + frontBase.getLineWidth(); // set path command render points\n\n    this.pathCommands[0].renderPoints[0].set(frontBase.renderOrigin);\n    this.pathCommands[1].renderPoints[0].set(rearBase.renderOrigin);\n\n    if (renderer.isCanvas) {\n      ctx.lineCap = 'butt'; // nice\n    }\n\n    renderer.renderPath(ctx, elem, this.pathCommands);\n    renderer.stroke(ctx, elem, true, this.color, strokeWidth);\n    renderer.end(ctx, elem);\n\n    if (renderer.isCanvas) {\n      ctx.lineCap = 'round'; // reset\n    }\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  CylinderGroup.prototype.getRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.svgElement) {\n      // create svgElement\n      this.svgElement = document.createElementNS(svgURI, 'path');\n    }\n\n    return this.svgElement;\n  }; // prevent double-creation in parent.copyGraph()\n  // only create in Cylinder.create()\n\n\n  CylinderGroup.prototype.copyGraph = noop; // ----- CylinderEllipse ----- //\n\n  var CylinderEllipse = Ellipse.subclass();\n  CylinderEllipse.prototype.copyGraph = noop; // ----- Cylinder ----- //\n\n  var Cylinder = Shape.subclass({\n    diameter: 1,\n    length: 1,\n    frontFace: undefined,\n    fill: true\n  });\n  var TAU = utils.TAU;\n\n  Cylinder.prototype.create = function ()\n  /* options */\n  {\n    // call super\n    Shape.prototype.create.apply(this, arguments); // composite shape, create child shapes\n    // CylinderGroup to render cylinder surface then bases\n\n    this.group = new CylinderGroup({\n      addTo: this,\n      color: this.color,\n      visible: this.visible\n    });\n    var baseZ = this.length / 2;\n    var baseColor = this.backface || true; // front outside base\n\n    this.frontBase = this.group.frontBase = new Ellipse({\n      addTo: this.group,\n      diameter: this.diameter,\n      translate: {\n        z: baseZ\n      },\n      rotate: {\n        y: TAU / 2\n      },\n      color: this.color,\n      stroke: this.stroke,\n      fill: this.fill,\n      backface: this.frontFace || baseColor,\n      visible: this.visible\n    }); // back outside base\n\n    this.rearBase = this.group.rearBase = this.frontBase.copy({\n      translate: {\n        z: -baseZ\n      },\n      rotate: {\n        y: 0\n      },\n      backface: baseColor\n    });\n  }; // Cylinder shape does not render anything\n\n\n  Cylinder.prototype.render = function () {}; // ----- set child properties ----- //\n\n\n  var childProperties = ['stroke', 'fill', 'color', 'visible'];\n  childProperties.forEach(function (property) {\n    // use proxy property for custom getter & setter\n    var _prop = '_' + property;\n\n    Object.defineProperty(Cylinder.prototype, property, {\n      get: function get() {\n        return this[_prop];\n      },\n      set: function set(value) {\n        this[_prop] = value; // set property on children\n\n        if (this.frontBase) {\n          this.frontBase[property] = value;\n          this.rearBase[property] = value;\n          this.group[property] = value;\n        }\n      }\n    });\n  }); // TODO child property setter for backface, frontBaseColor, & rearBaseColor\n\n  return Cylinder;\n});","require(\"core-js/modules/es6.array.fill\");\n\n/**\n * Cone composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./vector'), require('./path-command'), require('./anchor'), require('./ellipse'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Cone = factory(Zdog, Zdog.Vector, Zdog.PathCommand, Zdog.Anchor, Zdog.Ellipse);\n  }\n})(this, function factory(utils, Vector, PathCommand, Anchor, Ellipse) {\n  var Cone = Ellipse.subclass({\n    length: 1,\n    fill: true\n  });\n  var TAU = utils.TAU;\n\n  Cone.prototype.create = function ()\n  /* options */\n  {\n    // call super\n    Ellipse.prototype.create.apply(this, arguments); // composite shape, create child shapes\n\n    this.apex = new Anchor({\n      addTo: this,\n      translate: {\n        z: this.length\n      }\n    }); // vectors used for calculation\n\n    this.renderApex = new Vector();\n    this.renderCentroid = new Vector();\n    this.tangentA = new Vector();\n    this.tangentB = new Vector();\n    this.surfacePathCommands = [new PathCommand('move', [{}]), // points set in renderConeSurface\n    new PathCommand('line', [{}]), new PathCommand('line', [{}])];\n  };\n\n  Cone.prototype.updateSortValue = function () {\n    // center of cone is one third of its length\n    this.renderCentroid.set(this.renderOrigin).lerp(this.apex.renderOrigin, 1 / 3);\n    this.sortValue = this.renderCentroid.z;\n  };\n\n  Cone.prototype.render = function (ctx, renderer) {\n    this.renderConeSurface(ctx, renderer);\n    Ellipse.prototype.render.apply(this, arguments);\n  };\n\n  Cone.prototype.renderConeSurface = function (ctx, renderer) {\n    if (!this.visible) {\n      return;\n    }\n\n    this.renderApex.set(this.apex.renderOrigin).subtract(this.renderOrigin);\n    var scale = this.renderNormal.magnitude();\n    var apexDistance = this.renderApex.magnitude2d();\n    var normalDistance = this.renderNormal.magnitude2d(); // eccentricity\n\n    var eccenAngle = Math.acos(normalDistance / scale);\n    var eccen = Math.sin(eccenAngle);\n    var radius = this.diameter / 2 * scale; // does apex extend beyond eclipse of face\n\n    var isApexVisible = radius * eccen < apexDistance;\n\n    if (!isApexVisible) {\n      return;\n    } // update tangents\n\n\n    var apexAngle = Math.atan2(this.renderNormal.y, this.renderNormal.x) + TAU / 2;\n    var projectLength = apexDistance / eccen;\n    var projectAngle = Math.acos(radius / projectLength); // set tangent points\n\n    var tangentA = this.tangentA;\n    var tangentB = this.tangentB;\n    tangentA.x = Math.cos(projectAngle) * radius * eccen;\n    tangentA.y = Math.sin(projectAngle) * radius;\n    tangentB.set(this.tangentA);\n    tangentB.y *= -1;\n    tangentA.rotateZ(apexAngle);\n    tangentB.rotateZ(apexAngle);\n    tangentA.add(this.renderOrigin);\n    tangentB.add(this.renderOrigin);\n    this.setSurfaceRenderPoint(0, tangentA);\n    this.setSurfaceRenderPoint(1, this.apex.renderOrigin);\n    this.setSurfaceRenderPoint(2, tangentB); // render\n\n    var elem = this.getSurfaceRenderElement(ctx, renderer);\n    renderer.renderPath(ctx, elem, this.surfacePathCommands);\n    renderer.stroke(ctx, elem, this.stroke, this.color, this.getLineWidth());\n    renderer.fill(ctx, elem, this.fill, this.color);\n    renderer.end(ctx, elem);\n  };\n\n  var svgURI = 'http://www.w3.org/2000/svg';\n\n  Cone.prototype.getSurfaceRenderElement = function (ctx, renderer) {\n    if (!renderer.isSvg) {\n      return;\n    }\n\n    if (!this.surfaceSvgElement) {\n      // create svgElement\n      this.surfaceSvgElement = document.createElementNS(svgURI, 'path');\n      this.surfaceSvgElement.setAttribute('stroke-linecap', 'round');\n      this.surfaceSvgElement.setAttribute('stroke-linejoin', 'round');\n    }\n\n    return this.surfaceSvgElement;\n  };\n\n  Cone.prototype.setSurfaceRenderPoint = function (index, point) {\n    var renderPoint = this.surfacePathCommands[index].renderPoints[0];\n    renderPoint.set(point);\n  };\n\n  return Cone;\n});","require(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.array.fill\");\n\nrequire(\"core-js/modules/es6.array.for-each\");\n\n/**\n * Box composite shape\n */\n(function (root, factory) {\n  // module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(require('./boilerplate'), require('./anchor'), require('./shape'), require('./rect'));\n  } else {\n    // browser global\n    var Zdog = root.Zdog;\n    Zdog.Box = factory(Zdog, Zdog.Anchor, Zdog.Shape, Zdog.Rect);\n  }\n})(this, function factory(utils, Anchor, Shape, Rect) {\n  // ----- BoxRect ----- //\n  var BoxRect = Rect.subclass(); // prevent double-creation in parent.copyGraph()\n  // only create in Box.create()\n\n  BoxRect.prototype.copyGraph = function () {}; // ----- Box ----- //\n\n\n  var TAU = utils.TAU;\n  var faceNames = ['frontFace', 'rearFace', 'leftFace', 'rightFace', 'topFace', 'bottomFace'];\n  var boxDefaults = utils.extend({}, Shape.defaults);\n  delete boxDefaults.path;\n  faceNames.forEach(function (faceName) {\n    boxDefaults[faceName] = true;\n  });\n  utils.extend(boxDefaults, {\n    width: 1,\n    height: 1,\n    depth: 1,\n    fill: true\n  });\n  var Box = Anchor.subclass(boxDefaults);\n\n  Box.prototype.create = function (options) {\n    Anchor.prototype.create.call(this, options);\n    this.updatePath(); // HACK reset fill to trigger face setter\n\n    this.fill = this.fill;\n  };\n\n  Box.prototype.updatePath = function () {\n    // reset all faces to trigger setters\n    faceNames.forEach(function (faceName) {\n      this[faceName] = this[faceName];\n    }, this);\n  };\n\n  faceNames.forEach(function (faceName) {\n    var _faceName = '_' + faceName;\n\n    Object.defineProperty(Box.prototype, faceName, {\n      get: function get() {\n        return this[_faceName];\n      },\n      set: function set(value) {\n        this[_faceName] = value;\n        this.setFace(faceName, value);\n      }\n    });\n  });\n\n  Box.prototype.setFace = function (faceName, value) {\n    var rectProperty = faceName + 'Rect';\n    var rect = this[rectProperty]; // remove if false\n\n    if (!value) {\n      this.removeChild(rect);\n      return;\n    } // update & add face\n\n\n    var options = this.getFaceOptions(faceName);\n    options.color = typeof value == 'string' ? value : this.color;\n\n    if (rect) {\n      // update previous\n      rect.setOptions(options);\n    } else {\n      // create new\n      rect = this[rectProperty] = new BoxRect(options);\n    }\n\n    rect.updatePath();\n    this.addChild(rect);\n  };\n\n  Box.prototype.getFaceOptions = function (faceName) {\n    return {\n      frontFace: {\n        width: this.width,\n        height: this.height,\n        translate: {\n          z: this.depth / 2\n        }\n      },\n      rearFace: {\n        width: this.width,\n        height: this.height,\n        translate: {\n          z: -this.depth / 2\n        },\n        rotate: {\n          y: TAU / 2\n        }\n      },\n      leftFace: {\n        width: this.depth,\n        height: this.height,\n        translate: {\n          x: -this.width / 2\n        },\n        rotate: {\n          y: -TAU / 4\n        }\n      },\n      rightFace: {\n        width: this.depth,\n        height: this.height,\n        translate: {\n          x: this.width / 2\n        },\n        rotate: {\n          y: TAU / 4\n        }\n      },\n      topFace: {\n        width: this.width,\n        height: this.depth,\n        translate: {\n          y: -this.height / 2\n        },\n        rotate: {\n          x: -TAU / 4\n        }\n      },\n      bottomFace: {\n        width: this.width,\n        height: this.depth,\n        translate: {\n          y: this.height / 2\n        },\n        rotate: {\n          x: TAU / 4\n        }\n      }\n    }[faceName];\n  }; // ----- set face properties ----- //\n\n\n  var childProperties = ['color', 'stroke', 'fill', 'backface', 'front', 'visible'];\n  childProperties.forEach(function (property) {\n    // use proxy property for custom getter & setter\n    var _prop = '_' + property;\n\n    Object.defineProperty(Box.prototype, property, {\n      get: function get() {\n        return this[_prop];\n      },\n      set: function set(value) {\n        this[_prop] = value;\n        faceNames.forEach(function (faceName) {\n          var rect = this[faceName + 'Rect'];\n          var isFaceColor = typeof this[faceName] == 'string';\n          var isColorUnderwrite = property == 'color' && isFaceColor;\n\n          if (rect && !isColorUnderwrite) {\n            rect[property] = value;\n          }\n        }, this);\n      }\n    });\n  });\n  return Box;\n});"],"sourceRoot":""}